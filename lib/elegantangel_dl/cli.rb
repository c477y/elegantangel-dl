# frozen_string_literal: true

require "thor"

module ElegantAngelDL
  class Cli < Thor
    def self.exit_on_failure?
      true
    end

    desc "version", "app version"
    def version
      require_relative "version"
      puts "v#{ElegantAngelDL::VERSION}"
    end
    map %w[--version -v] => :version

    desc "download", "Bulk download files"
    long_desc <<~LONGDESC
      The download command can download scenes from www.elegantangel.com
      given a list of scenes, performers or movies.

      Before running the download command, login to your elegantangel account
      and then copy the cookie and paste it in some file. By default, the CLI
      will look for a `cookie.txt` file in the directory it is executed in.

      To define a list of scenes, performers or movies, create a YAML file
      with the structure as shown below:
      ```
      ---
        urls:
          - URL 1
          - URL 2
      ```

      The URLs can be simply copy pasted from your browser. Each file can then be
      passed on to as arguments to the download command. By default, the CLI will
      look for a `movies.yml` for movies, `performers.yml` for performers and
      `scenes.yml` for scenes.
      WARN: Make sure you place the correct URL in each file or the CLI will break!

      The CLI internally uses `youtube-dl` or `yt-dlp` to download the scenes. Make
      sure you have either installed with their dependencies(ffmpeg and ffprobe).
      You can specify which downloader you want to use using the `--downloader`
      argument. The logs of the downloader are stored in `downloader.log` file
      in the directory where the CLI is called.

      To download more than 1 file at a time, use the `--parallel` flag to specify
      the number of parallel downloads. A good safe limit is 4.

      The CLI will keep track of which scenes have been downloaded in the
      `download_status.store` file. This helps to skip duplicate downloads if a video
      has been downloaded before. Do not edit this file.

      EXAMPLES:
      # Manually specify the cookie file and performers file
      > $ elegantangel_dl download --cookie="./cookie.txt" --performers="./performers.yml"

      # Use the `cookie.txt` file and download scenes from default files (if present)
      # Downloads 4 scenes at a time
      > $ elegantangel-dl download --parallel=4
    LONGDESC
    option :help, alias: :h, type: :boolean, default: false
    option :cookie, required: false, desc: "Path to the file where the cookie is stored", aliases: :c
    option :performers, required: false, desc: "Path to a YAML file with list of pages of performers", aliases: :p
    option :movies, required: false, desc: "Path to a YAML file with list of pages of movies", aliases: :m
    option :scenes, required: false, desc: "Path to a YAML file with list of pages of individual scenes", aliases: :s
    option :download_path, required: false, desc: "Directory where the files should be downloaded", aliases: :d
    option :parallel, required: false, type: :numeric, desc: "Number of parallel downloads to perform"
    option :store, required: false, desc: "Path to the .store file which tracks which files have been downloaded"
    option :downloader, required: false, desc: "Name of the client to use to download. Can be either 'youtube-dl'(default) or 'yt-dlp'"
    option :verbose, type: :boolean, default: false, desc: "Flag to print verbose logs"
    def download
      client = Client.new(
        cookie_file: options[:cookie],
        verbose: options[:verbose],
        performer_file: options[:performers],
        movie_file: options[:movies],
        scene_file: options[:scenes],
        download_dir: options[:download_path],
        parallel: options[:parallel],
        downloader: options[:downloader]
      )
      client.start
    rescue Interrupt
      say "Exiting...", :green
    end
  end
end
